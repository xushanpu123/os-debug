{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9","program":"/home/xsp/.rustup/toolchains/nightly-2022-04-11-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","virtio_drivers","--edition=2018","/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9a3ed39c892a5f99","-C","extra-filename=-9a3ed39c892a5f99","--out-dir","/home/xsp/mylab/maturin/kernel/target/rls/debug/deps","-L","dependency=/home/xsp/mylab/maturin/kernel/target/rls/debug/deps","--extern","bitflags=/home/xsp/mylab/maturin/kernel/target/rls/debug/deps/libbitflags-f75283d3dcd3daad.rmeta","--extern","log=/home/xsp/mylab/maturin/kernel/target/rls/debug/deps/liblog-e08e6005f620851e.rmeta","--extern","volatile=/home/xsp/mylab/maturin/kernel/target/rls/debug/deps/libvolatile-ebe6de3c1e434fd7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/xsp/.rustup/toolchains/nightly-2022-04-11-x86_64-unknown-linux-gnu"],"output":"/home/xsp/mylab/maturin/kernel/target/rls/debug/deps/libvirtio_drivers-9a3ed39c892a5f99.rmeta"},"prelude":{"crate_id":{"name":"virtio_drivers","disambiguator":[3037560778914842202,0]},"crate_root":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src","external_crates":[{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[3092364855445609347,0]}},{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9990486623459429287,0]}},{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14554122218834081903,0]}},{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","num":4,"id":{"name":"log","disambiguator":[4141583356522159351,0]}},{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","num":5,"id":{"name":"cfg_if","disambiguator":[1473545623557579731,0]}},{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[13213966505437031232,0]}},{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","num":7,"id":{"name":"bitflags","disambiguator":[10508598979536798605,0]}},{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","num":8,"id":{"name":"volatile","disambiguator":[6388195346302422605,0]}}],"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":0,"byte_end":1703,"line_start":1,"line_end":77,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":462},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":291,"byte_end":298,"line_start":22,"line_end":22,"column_start":21,"column_end":28},"alias_span":null,"name":"BlkResp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":300,"byte_end":310,"line_start":22,"line_end":22,"column_start":30,"column_end":40},"alias_span":null,"name":"RespStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":312,"byte_end":321,"line_start":22,"line_end":22,"column_start":42,"column_end":51},"alias_span":null,"name":"VirtIOBlk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":68},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":347,"byte_end":360,"line_start":23,"line_end":23,"column_start":24,"column_end":37},"alias_span":null,"name":"VirtIOConsole","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":381,"byte_end":390,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"VirtIOGpu","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":414,"byte_end":415,"line_start":25,"line_end":25,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"VirtIOHeader","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1381},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":439,"byte_end":456,"line_start":26,"line_end":26,"column_start":23,"column_end":40},"alias_span":null,"name":"InputConfigSelect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1420},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":458,"byte_end":468,"line_start":26,"line_end":26,"column_start":42,"column_end":52},"alias_span":null,"name":"InputEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":470,"byte_end":481,"line_start":26,"line_end":26,"column_start":54,"column_end":65},"alias_span":null,"name":"VirtIOInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":327},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":503,"byte_end":512,"line_start":27,"line_end":27,"column_start":20,"column_end":29},"alias_span":null,"name":"VirtIONet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":0,"byte_end":1703,"line_start":1,"line_end":77,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":45},{"krate":0,"index":93},{"krate":0,"index":167},{"krate":0,"index":189},{"krate":0,"index":265},{"krate":0,"index":306},{"krate":0,"index":347},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":2232},{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"decl_id":null,"docs":" VirtIO guest drivers.\n","sig":null,"attributes":[{"value":"/ VirtIO guest drivers.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"no_std","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":27,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"deny(unused_must_use, missing_docs)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":38,"byte_end":77,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":78,"byte_end":108,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"allow(dead_code)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":109,"byte_end":129,"line_start":6,"line_end":6,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":2106,"byte_end":2115,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"VirtIOBlk","qualname":"::blk::VirtIOBlk","value":"VirtIOBlk {  }","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" The virtio block device is a simple virtual block device (ie. disk).","sig":null,"attributes":[{"value":"/ The virtio block device is a simple virtual block device (ie. disk).","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":1862,"byte_end":1934,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":1935,"byte_end":1938,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Read and write requests (and other exotic requests) are placed in the queue,","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":1939,"byte_end":2019,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ and serviced (probably out of order) by the device except where noted.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":2020,"byte_end":2094,"line_start":12,"line_end":12,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":2283,"byte_end":2286,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<VirtIOBlk>::new","value":"pub fn new(&'static mut VirtIOHeader) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new VirtIO-Blk driver.\n","sig":null,"attributes":[{"value":"/ Create a new VirtIO-Blk driver.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":2236,"byte_end":2271,"line_start":20,"line_end":20,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":3197,"byte_end":3210,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"ack_interrupt","qualname":"<VirtIOBlk>::ack_interrupt","value":"pub fn ack_interrupt(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Acknowledge interrupt.\n","sig":null,"attributes":[{"value":"/ Acknowledge interrupt.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":3159,"byte_end":3185,"line_start":48,"line_end":48,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":3308,"byte_end":3318,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"read_block","qualname":"<VirtIOBlk>::read_block","value":"pub fn read_block(&mut Self, usize, &mut [u8]) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Read a block.\n","sig":null,"attributes":[{"value":"/ Read a block.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":3279,"byte_end":3296,"line_start":53,"line_end":53,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5392,"byte_end":5405,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"name":"read_block_nb","qualname":"<VirtIOBlk>::read_block_nb","value":"pub unsafe fn read_block_nb(&mut Self, usize, &mut [u8], &mut BlkResp)\n-> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Read a block in a non-blocking way which means that it returns immediately.","sig":null,"attributes":[{"value":"/ Read a block in a non-blocking way which means that it returns immediately.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":3921,"byte_end":4000,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4005,"byte_end":4008,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4013,"byte_end":4028,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4033,"byte_end":4036,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ * `block_id` - The identifier of the block to read.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4041,"byte_end":4096,"line_start":78,"line_end":78,"column_start":5,"column_end":60}},{"value":"/ * `buf` - The buffer in the memory which the block is read into.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4101,"byte_end":4169,"line_start":79,"line_end":79,"column_start":5,"column_end":73}},{"value":"/ * `resp` - A mutable reference to a variable provided by the caller","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4174,"byte_end":4245,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/   which contains the status of the requests. The caller can safely","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4250,"byte_end":4320,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/   read the variable only after the request is ready.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4325,"byte_end":4381,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4386,"byte_end":4389,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4394,"byte_end":4405,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4410,"byte_end":4413,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ It will submit request to the virtio block device and return a token identifying","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4418,"byte_end":4502,"line_start":86,"line_end":86,"column_start":5,"column_end":89}},{"value":"/ the position of the first Descriptor in the chain. If there are not enough","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4507,"byte_end":4585,"line_start":87,"line_end":87,"column_start":5,"column_end":83}},{"value":"/ Descriptors to allocate, then it returns [Error::BufferTooSmall].","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4590,"byte_end":4659,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4664,"byte_end":4667,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ After the request is ready, `resp` will be updated and the caller can get the","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4672,"byte_end":4753,"line_start":90,"line_end":90,"column_start":5,"column_end":86}},{"value":"/ status of the request(e.g. succeed or failed) through it. However, the caller","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4758,"byte_end":4839,"line_start":91,"line_end":91,"column_start":5,"column_end":86}},{"value":"/ **must not** spin on `resp` to wait for it to change. A safe way is to read it","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4844,"byte_end":4926,"line_start":92,"line_end":92,"column_start":5,"column_end":87}},{"value":"/ after the same token as this method returns is fetched through [VirtIOBlk::pop_used()],","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":4931,"byte_end":5022,"line_start":93,"line_end":93,"column_start":5,"column_end":96}},{"value":"/ which means that the request has been ready.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5027,"byte_end":5075,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5080,"byte_end":5083,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5088,"byte_end":5100,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5105,"byte_end":5108,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ `buf` is still borrowed by the underlying virtio block device even if this","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5113,"byte_end":5191,"line_start":98,"line_end":98,"column_start":5,"column_end":83}},{"value":"/ method returns. Thus, it is the caller's responsibility to guarantee that","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5196,"byte_end":5273,"line_start":99,"line_end":99,"column_start":5,"column_end":82}},{"value":"/ `buf` is not accessed before the request is completed in order to avoid","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5278,"byte_end":5353,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ data races.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5358,"byte_end":5373,"line_start":101,"line_end":101,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5870,"byte_end":5881,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"write_block","qualname":"<VirtIOBlk>::write_block","value":"pub fn write_block(&mut Self, usize, &[u8]) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Write a block.\n","sig":null,"attributes":[{"value":"/ Write a block.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":5840,"byte_end":5858,"line_start":119,"line_end":119,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7135,"byte_end":7149,"line_start":157,"line_end":157,"column_start":19,"column_end":33},"name":"write_block_nb","qualname":"<VirtIOBlk>::write_block_nb","value":"pub unsafe fn write_block_nb(&mut Self, usize, &[u8], &mut BlkResp)\n-> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":"\n # Arguments","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6567,"byte_end":6570,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6575,"byte_end":6590,"line_start":142,"line_end":142,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6595,"byte_end":6598,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ * `block_id` - The identifier of the block to write.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6603,"byte_end":6659,"line_start":144,"line_end":144,"column_start":5,"column_end":61}},{"value":"/ * `buf` - The buffer in the memory containing the data to write to the block.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6664,"byte_end":6745,"line_start":145,"line_end":145,"column_start":5,"column_end":86}},{"value":"/ * `resp` - A mutable reference to a variable provided by the caller","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6750,"byte_end":6821,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/   which contains the status of the requests. The caller can safely","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6826,"byte_end":6896,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/   read the variable only after the request is ready.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6901,"byte_end":6957,"line_start":148,"line_end":148,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6962,"byte_end":6965,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6970,"byte_end":6981,"line_start":150,"line_end":150,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6986,"byte_end":6989,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ See also [VirtIOBlk::read_block_nb()].","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":6994,"byte_end":7036,"line_start":152,"line_end":152,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7041,"byte_end":7044,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7049,"byte_end":7061,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7066,"byte_end":7069,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ See also [VirtIOBlk::read_block_nb()].","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7074,"byte_end":7116,"line_start":156,"line_end":156,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7791,"byte_end":7799,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"pop_used","qualname":"<VirtIOBlk>::pop_used","value":"pub fn pop_used(&mut Self) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" During an interrupt, it fetches a token of a completed request from the used\n ring and return it. If all completed requests have already been fetched, return\n Err(Error::NotReady).\n","sig":null,"attributes":[{"value":"/ During an interrupt, it fetches a token of a completed request from the used","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7581,"byte_end":7661,"line_start":174,"line_end":174,"column_start":5,"column_end":85}},{"value":"/ ring and return it. If all completed requests have already been fetched, return","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7666,"byte_end":7749,"line_start":175,"line_end":175,"column_start":5,"column_end":88}},{"value":"/ Err(Error::NotReady).","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7754,"byte_end":7779,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":8009,"byte_end":8024,"line_start":183,"line_end":183,"column_start":12,"column_end":27},"name":"virt_queue_size","qualname":"<VirtIOBlk>::virt_queue_size","value":"pub fn virt_queue_size(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Return size of its VirtQueue.\n It can be used to tell the caller how many channels he should monitor on.\n","sig":null,"attributes":[{"value":"/ Return size of its VirtQueue.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7882,"byte_end":7915,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/ It can be used to tell the caller how many channels he should monitor on.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":7920,"byte_end":7997,"line_start":182,"line_end":182,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":462},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":8695,"byte_end":8702,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"BlkResp","qualname":"::blk::BlkResp","value":"BlkResp {  }","parent":null,"children":[{"krate":0,"index":463}],"decl_id":null,"docs":" Response of a VirtIOBlk request.\n","sig":null,"attributes":[{"value":"/ Response of a VirtIOBlk request.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":8619,"byte_end":8655,"line_start":214,"line_end":214,"column_start":1,"column_end":37}},{"value":"repr(C)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":8656,"byte_end":8666,"line_start":215,"line_end":215,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":8808,"byte_end":8814,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"status","qualname":"<BlkResp>::status","value":"pub fn status(&Self) -> RespStatus","parent":null,"children":[],"decl_id":null,"docs":" Return the status of a VirtIOBlk request.\n","sig":null,"attributes":[{"value":"/ Return the status of a VirtIOBlk request.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":8751,"byte_end":8796,"line_start":222,"line_end":222,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":485},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9125,"byte_end":9127,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Ok","qualname":"::blk::RespStatus::Ok","value":"RespStatus::Ok","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Ok.\n","sig":null,"attributes":[{"value":"/ Ok.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9113,"byte_end":9120,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":488},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9152,"byte_end":9157,"line_start":245,"line_end":245,"column_start":5,"column_end":10},"name":"IoErr","qualname":"::blk::RespStatus::IoErr","value":"RespStatus::IoErr","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" IoErr.\n","sig":null,"attributes":[{"value":"/ IoErr.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9137,"byte_end":9147,"line_start":244,"line_end":244,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":491},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9192,"byte_end":9203,"line_start":247,"line_end":247,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::blk::RespStatus::Unsupported","value":"RespStatus::Unsupported","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Unsupported yet.\n","sig":null,"attributes":[{"value":"/ Unsupported yet.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9167,"byte_end":9187,"line_start":246,"line_end":246,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":494},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9232,"byte_end":9241,"line_start":249,"line_end":249,"column_start":5,"column_end":14},"name":"_NotReady","qualname":"::blk::RespStatus::_NotReady","value":"RespStatus::_NotReady","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Not ready.\n","sig":null,"attributes":[{"value":"/ Not ready.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9213,"byte_end":9227,"line_start":248,"line_end":248,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":484},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9096,"byte_end":9106,"line_start":241,"line_end":241,"column_start":10,"column_end":20},"name":"RespStatus","qualname":"::blk::RespStatus","value":"pub enum RespStatus { Ok = , IoErr = , Unsupported = , _NotReady = , }","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494}],"decl_id":null,"docs":" Status of a VirtIOBlk request.\n","sig":null,"attributes":[{"value":"/ Status of a VirtIOBlk request.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":8995,"byte_end":9029,"line_start":238,"line_end":238,"column_start":1,"column_end":35}},{"value":"repr(u8)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9030,"byte_end":9041,"line_start":239,"line_end":239,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":68},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":12001,"byte_end":12014,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"VirtIOConsole","qualname":"::console::VirtIOConsole","value":"VirtIOConsole {  }","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"decl_id":null,"docs":" Virtio console. Only one single port is allowed since ``alloc'' is disabled.\n Emergency and cols/rows unimplemented.\n","sig":null,"attributes":[{"value":"/ Virtio console. Only one single port is allowed since ``alloc'' is disabled.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":11866,"byte_end":11946,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ Emergency and cols/rows unimplemented.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":11947,"byte_end":11989,"line_start":12,"line_end":12,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":12305,"byte_end":12308,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<VirtIOConsole>::new","value":"pub fn new(&'static mut VirtIOHeader) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new VirtIO-Console driver.\n","sig":null,"attributes":[{"value":"/ Create a new VirtIO-Console driver.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":12254,"byte_end":12293,"line_start":24,"line_end":24,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":13499,"byte_end":13512,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"ack_interrupt","qualname":"<VirtIOConsole>::ack_interrupt","value":"pub fn ack_interrupt(&mut Self) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Acknowledge interrupt.\n","sig":null,"attributes":[{"value":"/ Acknowledge interrupt.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":13461,"byte_end":13487,"line_start":55,"line_end":55,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":13977,"byte_end":13981,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"recv","qualname":"<VirtIOConsole>::recv","value":"pub fn recv(&mut Self, bool) -> Result<Option<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Try get char.\n","sig":null,"attributes":[{"value":"/ Try get char.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":13948,"byte_end":13965,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":14394,"byte_end":14398,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"send","qualname":"<VirtIOConsole>::send","value":"pub fn send(&mut Self, u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Put a char onto the device.\n","sig":null,"attributes":[{"value":"/ Put a char onto the device.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":14351,"byte_end":14382,"line_start":86,"line_end":86,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":16498,"byte_end":16507,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"VirtIOGpu","qualname":"::gpu::VirtIOGpu","value":"VirtIOGpu {  }","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" A virtio based graphics adapter.","sig":null,"attributes":[{"value":"/ A virtio based graphics adapter.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":16148,"byte_end":16184,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":16185,"byte_end":16188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ It can operate in 2D mode and in 3D (virgl) mode.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":16189,"byte_end":16242,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"/ 3D mode will offload rendering ops to the host gpu and therefore requires","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":16243,"byte_end":16320,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ a gpu with 3D support on the host machine.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":16321,"byte_end":16367,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/ In 2D mode the virtio-gpu device provides support for ARGB Hardware cursors","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":16368,"byte_end":16447,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ and multiple scanouts (aka heads).","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":16448,"byte_end":16486,"line_start":14,"line_end":14,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":17123,"byte_end":17126,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<VirtIOGpu>::new","value":"pub fn new(&'static mut VirtIOHeader) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new VirtIO-Gpu driver.\n","sig":null,"attributes":[{"value":"/ Create a new VirtIO-Gpu driver.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":17076,"byte_end":17111,"line_start":35,"line_end":35,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":18340,"byte_end":18353,"line_start":71,"line_end":71,"column_start":12,"column_end":25},"name":"ack_interrupt","qualname":"<VirtIOGpu>::ack_interrupt","value":"pub fn ack_interrupt(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Acknowledge interrupt.\n","sig":null,"attributes":[{"value":"/ Acknowledge interrupt.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":18302,"byte_end":18328,"line_start":70,"line_end":70,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":18473,"byte_end":18483,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"resolution","qualname":"<VirtIOGpu>::resolution","value":"pub fn resolution(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the resolution (width, height).\n","sig":null,"attributes":[{"value":"/ Get the resolution (width, height).","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":18422,"byte_end":18461,"line_start":75,"line_end":75,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":18595,"byte_end":18612,"line_start":81,"line_end":81,"column_start":12,"column_end":29},"name":"setup_framebuffer","qualname":"<VirtIOGpu>::setup_framebuffer","value":"pub fn setup_framebuffer(&mut Self) -> Result<&mut [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Setup framebuffer\n","sig":null,"attributes":[{"value":"/ Setup framebuffer","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":18562,"byte_end":18583,"line_start":80,"line_end":80,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":19608,"byte_end":19613,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"flush","qualname":"<VirtIOGpu>::flush","value":"pub fn flush(&mut Self) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Flush framebuffer to screen.\n","sig":null,"attributes":[{"value":"/ Flush framebuffer to screen.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":19564,"byte_end":19596,"line_start":109,"line_end":109,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":19908,"byte_end":19920,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"setup_cursor","qualname":"<VirtIOGpu>::setup_cursor","value":"pub fn setup_cursor(&mut Self, &[u8], u32, u32, u32, u32) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Set the pointer shape and position.\n","sig":null,"attributes":[{"value":"/ Set the pointer shape and position.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":19857,"byte_end":19896,"line_start":118,"line_end":118,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":20999,"byte_end":21010,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"move_cursor","qualname":"<VirtIOGpu>::move_cursor","value":"pub fn move_cursor(&mut Self, u32, u32) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Move the pointer without updating the shape.\n","sig":null,"attributes":[{"value":"/ Move the pointer without updating the shape.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":20939,"byte_end":20987,"line_start":151,"line_end":151,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":204},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":31266,"byte_end":31278,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"VirtIOHeader","qualname":"::header::VirtIOHeader","value":"VirtIOHeader {  }","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247}],"decl_id":null,"docs":" MMIO Device Legacy Register Interface.","sig":null,"attributes":[{"value":"/ MMIO Device Legacy Register Interface.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":31165,"byte_end":31207,"line_start":5,"line_end":5,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":31208,"byte_end":31211,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Ref: 4.2.4 Legacy interface","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":31212,"byte_end":31243,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"repr(C)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":31244,"byte_end":31254,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":35847,"byte_end":35853,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"verify","qualname":"<VirtIOHeader>::verify","value":"pub fn verify(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify a valid header.\n","sig":null,"attributes":[{"value":"/ Verify a valid header.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":35809,"byte_end":35835,"line_start":149,"line_end":149,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":36017,"byte_end":36028,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"device_type","qualname":"<VirtIOHeader>::device_type","value":"pub fn device_type(&Self) -> DeviceType","parent":null,"children":[],"decl_id":null,"docs":" Get the device type.\n","sig":null,"attributes":[{"value":"/ Get the device type.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":35981,"byte_end":36005,"line_start":154,"line_end":154,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":36265,"byte_end":36274,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"vendor_id","qualname":"<VirtIOHeader>::vendor_id","value":"pub fn vendor_id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the vendor ID.\n","sig":null,"attributes":[{"value":"/ Get the vendor ID.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":36231,"byte_end":36253,"line_start":162,"line_end":162,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":36434,"byte_end":36444,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"name":"begin_init","qualname":"<VirtIOHeader>::begin_init","value":"pub fn begin_init<impl FnOnce(u64) -> u64: FnOnce(u64) ->\nu64>(&mut Self, impl FnOnce(u64) -> u64)","parent":null,"children":[],"decl_id":null,"docs":" Begin initializing the device.","sig":null,"attributes":[{"value":"/ Begin initializing the device.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":36332,"byte_end":36366,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":36371,"byte_end":36374,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Ref: virtio 3.1.1 Device Initialization","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":36379,"byte_end":36422,"line_start":169,"line_end":169,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":36892,"byte_end":36903,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"finish_init","qualname":"<VirtIOHeader>::finish_init","value":"pub fn finish_init(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Finish initializing the device.\n","sig":null,"attributes":[{"value":"/ Finish initializing the device.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":36845,"byte_end":36880,"line_start":181,"line_end":181,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":37783,"byte_end":37792,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"queue_set","qualname":"<VirtIOHeader>::queue_set","value":"pub fn queue_set(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set queue.\n","sig":null,"attributes":[{"value":"/ Set queue.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":37757,"byte_end":37771,"line_start":203,"line_end":203,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38077,"byte_end":38103,"line_start":212,"line_end":212,"column_start":12,"column_end":38},"name":"queue_physical_page_number","qualname":"<VirtIOHeader>::queue_physical_page_number","value":"pub fn queue_physical_page_number(&mut Self, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get guest physical page number of the virtual queue.\n","sig":null,"attributes":[{"value":"/ Get guest physical page number of the virtual queue.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38009,"byte_end":38065,"line_start":211,"line_end":211,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38259,"byte_end":38269,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"queue_used","qualname":"<VirtIOHeader>::queue_used","value":"pub fn queue_used(&mut Self, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the queue is in used.\n","sig":null,"attributes":[{"value":"/ Whether the queue is in used.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38214,"byte_end":38247,"line_start":217,"line_end":217,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38408,"byte_end":38422,"line_start":223,"line_end":223,"column_start":12,"column_end":26},"name":"max_queue_size","qualname":"<VirtIOHeader>::max_queue_size","value":"pub fn max_queue_size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the max size of queue.\n","sig":null,"attributes":[{"value":"/ Get the max size of queue.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38366,"byte_end":38396,"line_start":222,"line_end":222,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38514,"byte_end":38520,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"notify","qualname":"<VirtIOHeader>::notify","value":"pub fn notify(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Notify device.\n","sig":null,"attributes":[{"value":"/ Notify device.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38484,"byte_end":38502,"line_start":227,"line_end":227,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38662,"byte_end":38675,"line_start":233,"line_end":233,"column_start":12,"column_end":25},"name":"ack_interrupt","qualname":"<VirtIOHeader>::ack_interrupt","value":"pub fn ack_interrupt(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Acknowledge interrupt and return true if success.\n","sig":null,"attributes":[{"value":"/ Acknowledge interrupt and return true if success.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38597,"byte_end":38650,"line_start":232,"line_end":232,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38966,"byte_end":38978,"line_start":244,"line_end":244,"column_start":12,"column_end":24},"name":"config_space","qualname":"<VirtIOHeader>::config_space","value":"pub fn config_space(&Self) -> *mut u64","parent":null,"children":[],"decl_id":null,"docs":" Get the pointer to config space (at offset 0x100)\n","sig":null,"attributes":[{"value":"/ Get the pointer to config space (at offset 0x100)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":38901,"byte_end":38954,"line_start":243,"line_end":243,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1304},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40290,"byte_end":40297,"line_start":285,"line_end":285,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::header::DeviceType::Invalid","value":"DeviceType::Invalid","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40307,"byte_end":40314,"line_start":286,"line_end":286,"column_start":5,"column_end":12},"name":"Network","qualname":"::header::DeviceType::Network","value":"DeviceType::Network","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1310},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40324,"byte_end":40329,"line_start":287,"line_end":287,"column_start":5,"column_end":10},"name":"Block","qualname":"::header::DeviceType::Block","value":"DeviceType::Block","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40339,"byte_end":40346,"line_start":288,"line_end":288,"column_start":5,"column_end":12},"name":"Console","qualname":"::header::DeviceType::Console","value":"DeviceType::Console","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40356,"byte_end":40369,"line_start":289,"line_end":289,"column_start":5,"column_end":18},"name":"EntropySource","qualname":"::header::DeviceType::EntropySource","value":"DeviceType::EntropySource","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40379,"byte_end":40395,"line_start":290,"line_end":290,"column_start":5,"column_end":21},"name":"MemoryBallooning","qualname":"::header::DeviceType::MemoryBallooning","value":"DeviceType::MemoryBallooning","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1322},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40405,"byte_end":40413,"line_start":291,"line_end":291,"column_start":5,"column_end":13},"name":"IoMemory","qualname":"::header::DeviceType::IoMemory","value":"DeviceType::IoMemory","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40423,"byte_end":40428,"line_start":292,"line_end":292,"column_start":5,"column_end":10},"name":"Rpmsg","qualname":"::header::DeviceType::Rpmsg","value":"DeviceType::Rpmsg","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1328},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40438,"byte_end":40446,"line_start":293,"line_end":293,"column_start":5,"column_end":13},"name":"ScsiHost","qualname":"::header::DeviceType::ScsiHost","value":"DeviceType::ScsiHost","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40456,"byte_end":40459,"line_start":294,"line_end":294,"column_start":5,"column_end":8},"name":"_9P","qualname":"::header::DeviceType::_9P","value":"DeviceType::_9P","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1334},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40469,"byte_end":40477,"line_start":295,"line_end":295,"column_start":5,"column_end":13},"name":"Mac80211","qualname":"::header::DeviceType::Mac80211","value":"DeviceType::Mac80211","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40488,"byte_end":40499,"line_start":296,"line_end":296,"column_start":5,"column_end":16},"name":"RprocSerial","qualname":"::header::DeviceType::RprocSerial","value":"DeviceType::RprocSerial","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1340},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40510,"byte_end":40520,"line_start":297,"line_end":297,"column_start":5,"column_end":15},"name":"VirtioCAIF","qualname":"::header::DeviceType::VirtioCAIF","value":"DeviceType::VirtioCAIF","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1343},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40531,"byte_end":40544,"line_start":298,"line_end":298,"column_start":5,"column_end":18},"name":"MemoryBalloon","qualname":"::header::DeviceType::MemoryBalloon","value":"DeviceType::MemoryBalloon","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1346},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40555,"byte_end":40558,"line_start":299,"line_end":299,"column_start":5,"column_end":8},"name":"GPU","qualname":"::header::DeviceType::GPU","value":"DeviceType::GPU","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1349},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40569,"byte_end":40574,"line_start":300,"line_end":300,"column_start":5,"column_end":10},"name":"Timer","qualname":"::header::DeviceType::Timer","value":"DeviceType::Timer","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1352},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40585,"byte_end":40590,"line_start":301,"line_end":301,"column_start":5,"column_end":10},"name":"Input","qualname":"::header::DeviceType::Input","value":"DeviceType::Input","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1355},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40601,"byte_end":40607,"line_start":302,"line_end":302,"column_start":5,"column_end":11},"name":"Socket","qualname":"::header::DeviceType::Socket","value":"DeviceType::Socket","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1358},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40618,"byte_end":40624,"line_start":303,"line_end":303,"column_start":5,"column_end":11},"name":"Crypto","qualname":"::header::DeviceType::Crypto","value":"DeviceType::Crypto","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1361},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40635,"byte_end":40659,"line_start":304,"line_end":304,"column_start":5,"column_end":29},"name":"SignalDistributionModule","qualname":"::header::DeviceType::SignalDistributionModule","value":"DeviceType::SignalDistributionModule","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1364},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40670,"byte_end":40676,"line_start":305,"line_end":305,"column_start":5,"column_end":11},"name":"Pstore","qualname":"::header::DeviceType::Pstore","value":"DeviceType::Pstore","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40687,"byte_end":40692,"line_start":306,"line_end":306,"column_start":5,"column_end":10},"name":"IOMMU","qualname":"::header::DeviceType::IOMMU","value":"DeviceType::IOMMU","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1370},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40703,"byte_end":40709,"line_start":307,"line_end":307,"column_start":5,"column_end":11},"name":"Memory","qualname":"::header::DeviceType::Memory","value":"DeviceType::Memory","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1303},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40273,"byte_end":40283,"line_start":284,"line_end":284,"column_start":10,"column_end":20},"name":"DeviceType","qualname":"::header::DeviceType","value":"pub enum DeviceType {\n    Invalid = ,\n    Network = ,\n    Block = ,\n    Console = ,\n    EntropySource = ,\n    MemoryBallooning = ,\n    IoMemory = ,\n    Rpmsg = ,\n    ScsiHost = ,\n    _9P = ,\n    Mac80211 = ,\n    RprocSerial = ,\n    VirtioCAIF = ,\n    MemoryBalloon = ,\n    GPU = ,\n    Timer = ,\n    Input = ,\n    Socket = ,\n    Crypto = ,\n    SignalDistributionModule = ,\n    Pstore = ,\n    IOMMU = ,\n    Memory = ,\n}","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370}],"decl_id":null,"docs":" Types of virtio devices.\n","sig":null,"attributes":[{"value":"/ Types of virtio devices.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40168,"byte_end":40196,"line_start":280,"line_end":280,"column_start":1,"column_end":29}},{"value":"repr(u8)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40197,"byte_end":40208,"line_start":281,"line_end":281,"column_start":1,"column_end":12}},{"value":"allow(missing_docs)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":40241,"byte_end":40263,"line_start":283,"line_end":283,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":279},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":41106,"byte_end":41117,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"VirtIOInput","qualname":"::input::VirtIOInput","value":"VirtIOInput {  }","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" Virtual human interface devices such as keyboards, mice and tablets.","sig":null,"attributes":[{"value":"/ Virtual human interface devices such as keyboards, mice and tablets.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":40823,"byte_end":40895,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":40896,"byte_end":40899,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ An instance of the virtio device represents one such input device.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":40900,"byte_end":40970,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Device behavior mirrors that of the evdev layer in Linux,","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":40971,"byte_end":41032,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/ making pass-through implementations on top of evdev easy.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":41033,"byte_end":41094,"line_start":11,"line_end":11,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":41349,"byte_end":41352,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<VirtIOInput>::new","value":"pub fn new(&'static mut VirtIOHeader) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new VirtIO-Input driver.\n","sig":null,"attributes":[{"value":"/ Create a new VirtIO-Input driver.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":41300,"byte_end":41337,"line_start":20,"line_end":20,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":42394,"byte_end":42407,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"ack_interrupt","qualname":"<VirtIOInput>::ack_interrupt","value":"pub fn ack_interrupt(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Acknowledge interrupt and process events.\n","sig":null,"attributes":[{"value":"/ Acknowledge interrupt and process events.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":42337,"byte_end":42382,"line_start":48,"line_end":48,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":42514,"byte_end":42531,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"pop_pending_event","qualname":"<VirtIOInput>::pop_pending_event","value":"pub fn pop_pending_event(&mut Self) -> Option<InputEvent>","parent":null,"children":[],"decl_id":null,"docs":" Pop the pending event.\n","sig":null,"attributes":[{"value":"/ Pop the pending event.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":42476,"byte_end":42502,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43010,"byte_end":43029,"line_start":67,"line_end":67,"column_start":12,"column_end":31},"name":"query_config_select","qualname":"<VirtIOInput>::query_config_select","value":"pub fn query_config_select(&mut Self, InputConfigSelect, u8, &mut [u8]) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Query a specific piece of information by `select` and `subsel`, and write\n result to `out`, return the result size.\n","sig":null,"attributes":[{"value":"/ Query a specific piece of information by `select` and `subsel`, and write","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":42872,"byte_end":42949,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ result to `out`, return the result size.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":42954,"byte_end":42998,"line_start":66,"line_end":66,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43686,"byte_end":43692,"line_start":88,"line_end":88,"column_start":5,"column_end":11},"name":"IdName","qualname":"::input::InputConfigSelect::IdName","value":"InputConfigSelect::IdName","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" Returns the name of the device, in u.string. subsel is zero.\n","sig":null,"attributes":[{"value":"/ Returns the name of the device, in u.string. subsel is zero.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43617,"byte_end":43681,"line_start":87,"line_end":87,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1385},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43783,"byte_end":43791,"line_start":90,"line_end":90,"column_start":5,"column_end":13},"name":"IdSerial","qualname":"::input::InputConfigSelect::IdSerial","value":"InputConfigSelect::IdSerial","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" Returns the serial number of the device, in u.string. subsel is zero.\n","sig":null,"attributes":[{"value":"/ Returns the serial number of the device, in u.string. subsel is zero.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43705,"byte_end":43778,"line_start":89,"line_end":89,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1388},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43876,"byte_end":43884,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"name":"IdDevids","qualname":"::input::InputConfigSelect::IdDevids","value":"InputConfigSelect::IdDevids","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" Returns ID information of the device, in u.ids. subsel is zero.\n","sig":null,"attributes":[{"value":"/ Returns ID information of the device, in u.ids. subsel is zero.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43804,"byte_end":43871,"line_start":91,"line_end":91,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1391},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44102,"byte_end":44110,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"PropBits","qualname":"::input::InputConfigSelect::PropBits","value":"InputConfigSelect::PropBits","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" Returns input properties of the device, in u.bitmap. subsel is zero.\n Individual bits in the bitmap correspond to INPUT_PROP_* constants used\n by the underlying evdev implementation.\n","sig":null,"attributes":[{"value":"/ Returns input properties of the device, in u.bitmap. subsel is zero.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43897,"byte_end":43969,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ Individual bits in the bitmap correspond to INPUT_PROP_* constants used","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43974,"byte_end":44049,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ by the underlying evdev implementation.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44054,"byte_end":44097,"line_start":95,"line_end":95,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1394},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44495,"byte_end":44501,"line_start":102,"line_end":102,"column_start":5,"column_end":11},"name":"EvBits","qualname":"::input::InputConfigSelect::EvBits","value":"InputConfigSelect::EvBits","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" subsel specifies the event type using EV_* constants in the underlying\n evdev implementation. If size is non-zero the event type is supported\n and a bitmap of supported event codes is returned in u.bitmap. Individual\n bits in the bitmap correspond to implementation-defined input event codes,\n for example keys or pointing device axes.\n","sig":null,"attributes":[{"value":"/ subsel specifies the event type using EV_* constants in the underlying","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44123,"byte_end":44197,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ evdev implementation. If size is non-zero the event type is supported","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44202,"byte_end":44275,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ and a bitmap of supported event codes is returned in u.bitmap. Individual","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44280,"byte_end":44357,"line_start":99,"line_end":99,"column_start":5,"column_end":82}},{"value":"/ bits in the bitmap correspond to implementation-defined input event codes,","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44362,"byte_end":44440,"line_start":100,"line_end":100,"column_start":5,"column_end":83}},{"value":"/ for example keys or pointing device axes.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44445,"byte_end":44490,"line_start":101,"line_end":101,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1397},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44681,"byte_end":44688,"line_start":105,"line_end":105,"column_start":5,"column_end":12},"name":"AbsInfo","qualname":"::input::InputConfigSelect::AbsInfo","value":"InputConfigSelect::AbsInfo","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" subsel specifies the absolute axis using ABS_* constants in the underlying\n evdev implementation. Information about the axis will be returned in u.abs.\n","sig":null,"attributes":[{"value":"/ subsel specifies the absolute axis using ABS_* constants in the underlying","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44514,"byte_end":44592,"line_start":103,"line_end":103,"column_start":5,"column_end":83}},{"value":"/ evdev implementation. Information about the axis will be returned in u.abs.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":44597,"byte_end":44676,"line_start":104,"line_end":104,"column_start":5,"column_end":84}}]},{"kind":"Enum","id":{"krate":0,"index":1381},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43593,"byte_end":43610,"line_start":86,"line_end":86,"column_start":10,"column_end":27},"name":"InputConfigSelect","qualname":"::input::InputConfigSelect","value":"pub enum InputConfigSelect {\n    IdName = ,\n    IdSerial = ,\n    IdDevids = ,\n    PropBits = ,\n    EvBits = ,\n    AbsInfo = ,\n}","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397}],"decl_id":null,"docs":" Select value used for [`VirtIOInput::query_config_select()`].\n","sig":null,"attributes":[{"value":"/ Select value used for [`VirtIOInput::query_config_select()`].","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43476,"byte_end":43541,"line_start":83,"line_end":83,"column_start":1,"column_end":66}},{"value":"repr(u8)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":43542,"byte_end":43553,"line_start":84,"line_end":84,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1420},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45326,"byte_end":45336,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"InputEvent","qualname":"::input::InputEvent","value":"InputEvent { event_type, code, value }","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"decl_id":null,"docs":" Both queues use the same `virtio_input_event` struct. `type`, `code` and `value`\n are filled according to the Linux input layer (evdev) interface.\n","sig":null,"attributes":[{"value":"/ Both queues use the same `virtio_input_event` struct. `type`, `code` and `value`","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45111,"byte_end":45195,"line_start":136,"line_end":136,"column_start":1,"column_end":85}},{"value":"/ are filled according to the Linux input layer (evdev) interface.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45196,"byte_end":45264,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"repr(C)","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45265,"byte_end":45275,"line_start":138,"line_end":138,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1421},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45367,"byte_end":45377,"line_start":142,"line_end":142,"column_start":9,"column_end":19},"name":"event_type","qualname":"::input::InputEvent::event_type","value":"u16","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Event type.\n","sig":null,"attributes":[{"value":"/ Event type.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45343,"byte_end":45358,"line_start":141,"line_end":141,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1422},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45412,"byte_end":45416,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"code","qualname":"::input::InputEvent::code","value":"u16","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Event code.\n","sig":null,"attributes":[{"value":"/ Event code.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45388,"byte_end":45403,"line_start":143,"line_end":143,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1423},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45452,"byte_end":45457,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"name":"value","qualname":"::input::InputEvent::value","value":"u32","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Event value.\n","sig":null,"attributes":[{"value":"/ Event value.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45427,"byte_end":45443,"line_start":145,"line_end":145,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":327},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":46911,"byte_end":46920,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"VirtIONet","qualname":"::net::VirtIONet","value":"VirtIONet {  }","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"decl_id":null,"docs":" The virtio network device is a virtual ethernet card.","sig":null,"attributes":[{"value":"/ The virtio network device is a virtual ethernet card.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":46493,"byte_end":46550,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":46551,"byte_end":46554,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It has enhanced rapidly and demonstrates clearly how support for new","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":46555,"byte_end":46627,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ features are added to an existing device.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":46628,"byte_end":46673,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/ Empty buffers are placed in one virtqueue for receiving packets, and","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":46674,"byte_end":46746,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ outgoing packets are enqueued into another for transmission in that order.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":46747,"byte_end":46825,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ A third command queue is used to control advanced filtering features.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":46826,"byte_end":46899,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":47129,"byte_end":47132,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<VirtIONet>::new","value":"pub fn new(&'static mut VirtIOHeader) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new VirtIO-Net driver.\n","sig":null,"attributes":[{"value":"/ Create a new VirtIO-Net driver.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":47082,"byte_end":47117,"line_start":24,"line_end":24,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":48101,"byte_end":48114,"line_start":52,"line_end":52,"column_start":12,"column_end":25},"name":"ack_interrupt","qualname":"<VirtIONet>::ack_interrupt","value":"pub fn ack_interrupt(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Acknowledge interrupt.\n","sig":null,"attributes":[{"value":"/ Acknowledge interrupt.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":48063,"byte_end":48089,"line_start":51,"line_end":51,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":48215,"byte_end":48218,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"mac","qualname":"<VirtIONet>::mac","value":"pub fn mac(&Self) -> EthernetAddress","parent":null,"children":[],"decl_id":null,"docs":" Get MAC address.\n","sig":null,"attributes":[{"value":"/ Get MAC address.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":48183,"byte_end":48203,"line_start":56,"line_end":56,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":48315,"byte_end":48323,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"can_send","qualname":"<VirtIONet>::can_send","value":"pub fn can_send(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether can send packet.\n","sig":null,"attributes":[{"value":"/ Whether can send packet.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":48275,"byte_end":48303,"line_start":61,"line_end":61,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":48441,"byte_end":48449,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"can_recv","qualname":"<VirtIONet>::can_recv","value":"pub fn can_recv(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether can receive packet.\n","sig":null,"attributes":[{"value":"/ Whether can receive packet.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":48398,"byte_end":48429,"line_start":66,"line_end":66,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":48545,"byte_end":48549,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"recv","qualname":"<VirtIONet>::recv","value":"pub fn recv(&mut Self, &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receive a packet.\n","sig":null,"attributes":[{"value":"/ Receive a packet.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":48512,"byte_end":48533,"line_start":71,"line_end":71,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":49108,"byte_end":49112,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"send","qualname":"<VirtIONet>::send","value":"pub fn send(&mut Self, &[u8]) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Send a packet.\n","sig":null,"attributes":[{"value":"/ Send a packet.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":49078,"byte_end":49096,"line_start":86,"line_end":86,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":435},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":663,"byte_end":669,"line_start":35,"line_end":35,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The type returned by driver methods.\n","sig":null,"attributes":[{"value":"/ The type returned by driver methods.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":613,"byte_end":653,"line_start":34,"line_end":34,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2233},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":918,"byte_end":932,"line_start":46,"line_end":46,"column_start":5,"column_end":19},"name":"BufferTooSmall","qualname":"::Error::BufferTooSmall","value":"Error::BufferTooSmall","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" The buffer is too small.\n","sig":null,"attributes":[{"value":"/ The buffer is too small.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":885,"byte_end":913,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2235},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":971,"byte_end":979,"line_start":48,"line_end":48,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::Error::NotReady","value":"Error::NotReady","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" The device is not ready.\n","sig":null,"attributes":[{"value":"/ The device is not ready.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":938,"byte_end":966,"line_start":47,"line_end":47,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2237},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":1022,"byte_end":1033,"line_start":50,"line_end":50,"column_start":5,"column_end":16},"name":"AlreadyUsed","qualname":"::Error::AlreadyUsed","value":"Error::AlreadyUsed","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" The queue is already in use.\n","sig":null,"attributes":[{"value":"/ The queue is already in use.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":985,"byte_end":1017,"line_start":49,"line_end":49,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2239},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":1066,"byte_end":1078,"line_start":52,"line_end":52,"column_start":5,"column_end":17},"name":"InvalidParam","qualname":"::Error::InvalidParam","value":"Error::InvalidParam","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Invalid parameter.\n","sig":null,"attributes":[{"value":"/ Invalid parameter.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":1039,"byte_end":1061,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2241},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":1120,"byte_end":1128,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"name":"DmaError","qualname":"::Error::DmaError","value":"Error::DmaError","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Failed to alloc DMA memory.\n","sig":null,"attributes":[{"value":"/ Failed to alloc DMA memory.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":1084,"byte_end":1115,"line_start":53,"line_end":53,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2243},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":1152,"byte_end":1159,"line_start":56,"line_end":56,"column_start":5,"column_end":12},"name":"IoError","qualname":"::Error::IoError","value":"Error::IoError","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" I/O Error\n","sig":null,"attributes":[{"value":"/ I/O Error","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":1134,"byte_end":1147,"line_start":55,"line_end":55,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":2232},"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":873,"byte_end":878,"line_start":44,"line_end":44,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    BufferTooSmall,\n    NotReady,\n    AlreadyUsed,\n    InvalidParam,\n    DmaError,\n    IoError,\n}","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2243}],"decl_id":null,"docs":" The error type of VirtIO drivers.\n","sig":null,"attributes":[{"value":"/ The error type of VirtIO drivers.","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":794,"byte_end":831,"line_start":42,"line_end":42,"column_start":1,"column_end":38}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":2216,"byte_end":2225,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":8737,"byte_end":8744,"line_start":221,"line_end":221,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9267,"byte_end":9274,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":11596,"byte_end":11602,"line_start":311,"line_end":311,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":11628,"byte_end":11635,"line_start":312,"line_end":312,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":12230,"byte_end":12243,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":14871,"byte_end":14877,"line_start":107,"line_end":107,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":17056,"byte_end":17065,"line_start":34,"line_end":34,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":21174,"byte_end":21183,"line_start":158,"line_end":158,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":25442,"byte_end":25448,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":27485,"byte_end":27495,"line_start":370,"line_end":370,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/hal.rs","byte_start":29727,"byte_end":29730,"line_start":11,"line_end":11,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/hal.rs","byte_start":30453,"byte_end":30456,"line_start":42,"line_end":42,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":35790,"byte_end":35802,"line_start":148,"line_end":148,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":41278,"byte_end":41289,"line_start":19,"line_end":19,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45489,"byte_end":45499,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":47062,"byte_end":47071,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":52535,"byte_end":52541,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/queue.rs","byte_start":53677,"byte_end":53686,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/queue.rs","byte_start":58679,"byte_end":58694,"line_start":189,"line_end":189,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/queue.rs","byte_start":59449,"byte_end":59459,"line_start":216,"line_end":216,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":2216,"byte_end":2225,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":8737,"byte_end":8744,"line_start":221,"line_end":221,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":9267,"byte_end":9274,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":462},"to":{"krate":1,"index":3086}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":11596,"byte_end":11602,"line_start":311,"line_end":311,"column_start":23,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":456},"to":{"krate":0,"index":439}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/blk.rs","byte_start":11628,"byte_end":11635,"line_start":312,"line_end":312,"column_start":23,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":462},"to":{"krate":0,"index":439}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":12230,"byte_end":12243,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":68},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/console.rs","byte_start":14871,"byte_end":14877,"line_start":107,"line_end":107,"column_start":21,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":86},"to":{"krate":1,"index":9745}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":17056,"byte_end":17065,"line_start":34,"line_end":34,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":21174,"byte_end":21183,"line_start":158,"line_end":158,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":25442,"byte_end":25448,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":150},"to":{"krate":1,"index":9745}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/gpu.rs","byte_start":27485,"byte_end":27495,"line_start":370,"line_end":370,"column_start":6,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/hal.rs","byte_start":29727,"byte_end":29730,"line_start":11,"line_end":11,"column_start":6,"column_end":9},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/hal.rs","byte_start":30453,"byte_end":30456,"line_start":42,"line_end":42,"column_start":15,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":171},"to":{"krate":1,"index":3351}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/header.rs","byte_start":35790,"byte_end":35802,"line_start":148,"line_end":148,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":41278,"byte_end":41289,"line_start":19,"line_end":19,"column_start":10,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/input.rs","byte_start":45489,"byte_end":45499,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1420},"to":{"krate":0,"index":439}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":47062,"byte_end":47071,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/net.rs","byte_start":52535,"byte_end":52541,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1974},"to":{"krate":0,"index":439}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/queue.rs","byte_start":53677,"byte_end":53686,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/queue.rs","byte_start":58679,"byte_end":58694,"line_start":189,"line_end":189,"column_start":6,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/queue.rs","byte_start":59449,"byte_end":59459,"line_start":216,"line_end":216,"column_start":6,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/xsp/.cargo/git/checkouts/virtio-drivers-4fdfaa862bcdc399/f2fb8b9/src/lib.rs","byte_start":1426,"byte_end":1431,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3113},"to":{"krate":0,"index":439}}]}